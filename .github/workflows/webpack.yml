name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create .env file
        run: |
          echo "PG_DATABASE=${{ secrets.PG_DATABASE }}" >> .env
          echo "PG_USER=${{ secrets.PG_USER }}" >> .env
          echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SCRYPT_SECRET=${{ secrets.SCRYPT_SECRET }}" >> .env

      - name: Build and start services
        run: |
          docker-compose build
          docker-compose up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec user-db pg_isready -U ${{ secrets.PG_USER }}; do
            echo "Waiting for user-db database connection..."
            sleep 2
          done

      - name: Run tests API-User
        run: |
          docker-compose exec api-users npm test

      - name: Tear down services
        run: docker-compose down
